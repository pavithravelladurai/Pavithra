// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using BookStoreWebApi.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace BookStoreWebApi.Models
{
    public partial class masterContext
    {
        private ImasterContextProcedures _procedures;

        public virtual ImasterContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new masterContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public ImasterContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<GetBooksSortedByAuthorTitleResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetBooksSortedByPublisherAuthorTitleResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetTotalPriceResult>().HasNoKey().ToView(null);
        }
    }

    public partial class masterContextProcedures : ImasterContextProcedures
    {
        private readonly masterContext _context;

        public masterContextProcedures(masterContext context)
        {
            _context = context;
        }

        public virtual async Task<List<GetBooksSortedByAuthorTitleResult>> GetBooksSortedByAuthorTitleAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetBooksSortedByAuthorTitleResult>("EXEC @returnValue = [dbo].[GetBooksSortedByAuthorTitle]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<GetBooksSortedByPublisherAuthorTitleResult>> GetBooksSortedByPublisherAuthorTitleAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetBooksSortedByPublisherAuthorTitleResult>("EXEC @returnValue = [dbo].[GetBooksSortedByPublisherAuthorTitle]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<GetTotalPriceResult>> GetTotalPriceAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetTotalPriceResult>("EXEC @returnValue = [dbo].[GetTotalPrice]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
